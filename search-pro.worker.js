const nt="ENTRIES",T="KEYS",V="VALUES",F="";class D{constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case V:return this.value();case T:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const a=o[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let l=0;l<c.length;++l,++a){const p=c[l],f=i*a,g=f-i;let d=o[f];const m=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<d&&(d=L)}if(d>s)continue t}W(e.get(c),t,s,n,o,a,i,r+c)}};class C{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=I(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=O(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=O(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,T)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,V)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},O=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return O(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=I(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=I(e);n.set(o+t,s),n.delete(o)},I=e=>e[e.length-1],it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",P="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},q=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,lt=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),q(n.terms,u)}}return e},[P]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);q(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},dt=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},ft={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},H={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:ft},mt={combineWith:P,prefix:(e,t,s)=>t===s.length-1},pt={batchSize:1e3,batchWait:10},J={minDirtFactor:.1,minDirtCount:20},Ft={...pt,...J};class _t{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ft:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...H,...t.searchOptions||{}},autoSuggestOptions:{...mt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=J,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const yt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},U=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},At=(e,t,s,n)=>{if(!e._index.has(n)){U(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?U(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(ht[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const a=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const d of p.keys()){if(!e._documentIds.has(d)){At(e,l,d,s),f-=1;continue}const m=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!m)continue;const y=p.get(d),_=e._fieldLength.get(d)[l],b=at(y,f,e._documentCount,_,g,r),z=n*a*m*b,A=h.get(d);if(A){A.score+=z,ct(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(d,{score:z,terms:[t],match:{[s]:[c]}})}}return h},Ct=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((d,m)=>({...d,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...H.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,m=d<1?Math.min(r,Math.round(t.term.length*d)):d;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[d,m]of f){const y=d.length-t.term.length;if(!y)continue;g==null||g.delete(d);const _=a*d.length/(d.length+.3*y);B(e,t.term,d,_,m,o,u,h,p)}if(g)for(const d of g.keys()){const[m,y]=g.get(d);if(!y)continue;const _=c*d.length/(d.length+y);B(e,t.term,d,_,m,o,u,h,p)}return p},K=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(p=>K(e,p,a));return Y(l,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(dt(i)).map(a=>Ct(e,a,i));return Y(c,i.combineWith)},X=(e,t,s={})=>{const n=K(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Et=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of X(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o},zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new _t(a);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const d of Object.keys(f)){let m=f[d];c===1&&(m=m.ds),g.set(parseInt(d,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:a?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return X(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[a,l]=u.split(/[#@]/),{contents:p}=n[a]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:a,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:a,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const d=i.map(m=>j(g,m)).filter(m=>m!==null);d.length&&p.push([{type:"text",key:a,...c&&{anchor:l},display:d},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=yt(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Et(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":29,\"nextId\":29,\"documentIds\":{\"0\":\"v-74458d05\",\"1\":\"v-74458d05@0\",\"2\":\"v-a6db35b0\",\"3\":\"v-a6db35b0#加载中小点点动画\",\"4\":\"v-a6db35b0@1\",\"5\":\"v-478356d0\",\"6\":\"v-478356d0#单行文字超出\",\"7\":\"v-478356d0#多行文字超出\",\"8\":\"v-478356d0@1\",\"9\":\"v-e02a086e\",\"10\":\"v-e02a086e@0\",\"11\":\"v-5abb1b98\",\"12\":\"v-5abb1b98@1\",\"13\":\"v-9d034570\",\"14\":\"v-9d034570#使用-url\",\"15\":\"v-9d034570#使用正则\",\"16\":\"v-9d034570@1\",\"17\":\"v-464321d6\",\"18\":\"v-464321d6#节流函数\",\"19\":\"v-464321d6#去抖函数\",\"20\":\"v-464321d6@1\",\"21\":\"v-2df376f3\",\"22\":\"v-2df376f3#使用-url\",\"23\":\"v-2df376f3#使用正则\",\"24\":\"v-2df376f3@1\",\"25\":\"v-744e35e2\",\"26\":\"v-744e35e2@0\",\"27\":\"v-047ccfd0\",\"28\":\"v-047ccfd0@0\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,null,1],\"2\":[1],\"3\":[1,49],\"4\":[null,null,1],\"5\":[1],\"6\":[1,8],\"7\":[1,17],\"8\":[null,null,1],\"9\":[1],\"10\":[null,null,1],\"11\":[1,37],\"12\":[null,null,1],\"13\":[1],\"14\":[2,13],\"15\":[1,13],\"16\":[null,null,1],\"17\":[2],\"18\":[1,29],\"19\":[1,26],\"20\":[null,null,1],\"21\":[1],\"22\":[2,12],\"23\":[1,17],\"24\":[null,null,1],\"25\":[1],\"26\":[null,null,1],\"27\":[1],\"28\":[null,null,1]},\"averageFieldLength\":[1.1222983559409339,15.442985026041667,0.7612874291711343],\"storedFields\":{\"0\":{\"h\":\"Css\"},\"1\":{\"c\":[\"使用指南\"]},\"2\":{\"h\":\"加载中小点点动画\"},\"3\":{\"h\":\"加载中小点点动画\",\"t\":[\"<html> <style> button { background-color: black; color: #ffffff; padding: 6px 20px; padding-right: 26px; border: none; } .loading { height: 2px; width: 2px; display: inline-block; animation: loading-animation 2.4s infinite steps(1, start); } @keyframes loading-animation { 25% { box-shadow: 2px 0 0 white; } 50% { box-shadow: 2px 0 0 white, 7px 0 0 white; } 75% { box-shadow: 2px 0 0 white, 7px 0 0 white, 12px 0 0 white; } } </style> <button> 加载中 <span class=\\\"loading\\\"></span> </button> </html> \"]},\"4\":{\"c\":[\"css\"]},\"5\":{\"h\":\"文字超出显示省略号\"},\"6\":{\"h\":\"单行文字超出\",\"t\":[\".text-overflow { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; } \"]},\"7\":{\"h\":\"多行文字超出\",\"t\":[\".text-overflow { overflow: hidden; text-overflow: ellipsis; display:-webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 2; // 多少行进行换行 word-wrap: break-word; } \"]},\"8\":{\"c\":[\"css\"]},\"9\":{\"h\":\"Javascript\"},\"10\":{\"c\":[\"使用指南\"]},\"11\":{\"h\":\"深拷贝\",\"t\":[\"export function deepClone(obj, hash = new WeakMap()) { // 处理null或者undefined if (obj === null) return obj; // 处理日期类型 if (obj instanceof Date) return new Date(obj); // 处理正则类型 if (obj instanceof RegExp) return new RegExp(obj); // 普通值或函数不需要深拷贝 if (typeof obj !== \\\"object\\\") return obj; // 对象进行深拷贝 if (hash.get(obj)) return hash.get(obj); let cloneObj = new obj.constructor(); // 找到的是所属类原型上的constructor,而原型上的 constructor指向的是当前类本身 hash.set(obj, cloneObj); for (let key in obj) { if (obj.hasOwnProperty(key)) { // 实现一个递归拷贝 cloneObj[key] = deepClone(obj[key], hash); } } return cloneObj; } \"]},\"12\":{\"c\":[\"javascript\"]},\"13\":{\"h\":\"获取文件后缀名\"},\"14\":{\"h\":\"使用 URL\",\"t\":[\"function getSuffix(fullUrl) { return filename.slice(((filename.lastIndexOf(\\\".\\\") - 1) >>> 0) + 2); } \"]},\"15\":{\"h\":\"使用正则\",\"t\":[\"function getSuffix(filename) { const regex = /(?:\\\\.([^.]+))?$/; return regex.exec(filename)[1]; } \"]},\"16\":{\"c\":[\"javascript\"]},\"17\":{\"h\":\"节流-去抖函数\"},\"18\":{\"h\":\"节流函数\",\"t\":[\"/** * 频率控制，返回函数连续调用时，fn执行周期控制为delay/次 * @param fn {function} 需要调用的函数 * @param delay {number} 延迟时间，单位毫秒 * @return {function} 实际调用函数 */ throttle(fn, delay) { let last = 0 return function(...args) { let cur = +new Date() if((cur - last) > delay) { fn.apply(this,arguments) last = cur } } } \"]},\"19\":{\"h\":\"去抖函数\",\"t\":[\"/** * 空闲控制，返回函数连续调用时，空闲时间必须大于等于delay才会执行fn * @param fn {function} 需要调用的函数 * @param delay {number} 空闲时间，单位毫秒 * @return {function} 实际调用函数 */ debounce(fn, delay) { let timer = null return function(...args) { if (timer) { clearTimeout(timer) } timer = setTimeout(() => { fn.apply(this, args) }, delay) } } \"]},\"20\":{\"c\":[\"javascript\"]},\"21\":{\"h\":\"url去掉域名函数\"},\"22\":{\"h\":\"使用 URL\",\"t\":[\"function urlRemoveDomain(fullUrl) { const url = new URL(fullUrl); const pathWithoutDomain = url.pathname; return pathWithoutDomain; } \"]},\"23\":{\"h\":\"使用正则\",\"t\":[\"function urlRemoveDomain(fullUrl) { const regex = /^(https?:\\\\/\\\\/)?[^\\\\/]+(.*)$/; const match = fullUrl.match(regex); const pathWithoutDomain = match ? match[2] : fullUrl; return pathWithoutDomain; } \",\"function urlRemoveDomain(fullUrl) { const pathWithoutDomain = fullUrl.replace(/^https?:\\\\/\\\\/[^\\\\/]+/, ''); return pathWithoutDomain; } \"]},\"24\":{\"c\":[\"javascript\"]},\"25\":{\"h\":\"Vue\"},\"26\":{\"c\":[\"Vue\"]},\"27\":{\"h\":\"antd\"},\"28\":{\"c\":[\"使用指南\"]}},\"dirtCount\":0,\"index\":[[\"vue\",{\"0\":{\"25\":1},\"2\":{\"26\":1}}],[\"vertical\",{\"1\":{\"7\":1}}],[\"match\",{\"1\":{\"23\":4}}],[\"空闲时间\",{\"1\":{\"19\":1}}],[\"空闲时间必须大于等于delay才会执行fn\",{\"1\":{\"19\":1}}],[\"空闲控制\",{\"1\":{\"19\":1}}],[\"antd\",{\"0\":{\"27\":1}}],[\"animation\",{\"1\":{\"3\":3}}],[\"arguments\",{\"1\":{\"18\":1}}],[\"args\",{\"1\":{\"18\":1,\"19\":2}}],[\"apply\",{\"1\":{\"18\":1,\"19\":1}}],[\"实际调用函数\",{\"1\":{\"18\":1,\"19\":1}}],[\"实现一个递归拷贝\",{\"1\":{\"11\":1}}],[\"单位毫秒\",{\"1\":{\"18\":1,\"19\":1}}],[\"单行文字超出\",{\"0\":{\"6\":1}}],[\"延迟时间\",{\"1\":{\"18\":1}}],[\"需要调用的函数\",{\"1\":{\"18\":1,\"19\":1}}],[\"pathname\",{\"1\":{\"22\":1}}],[\"pathwithoutdomain\",{\"1\":{\"22\":2,\"23\":4}}],[\"param\",{\"1\":{\"18\":2,\"19\":2}}],[\"padding\",{\"1\":{\"3\":2}}],[\"次\",{\"1\":{\"18\":1}}],[\"返回函数连续调用时\",{\"1\":{\"18\":1,\"19\":1}}],[\"频率控制\",{\"1\":{\"18\":1}}],[\"去抖函数\",{\"0\":{\"17\":1,\"19\":1}}],[\"节流函数\",{\"0\":{\"18\":1}}],[\"节流\",{\"0\":{\"17\":1}}],[\"$\",{\"1\":{\"15\":1,\"23\":1}}],[\"^https\",{\"1\":{\"23\":1}}],[\"^\",{\"1\":{\"15\":1,\"23\":3}}],[\"+new\",{\"1\":{\"18\":1}}],[\"+\",{\"1\":{\"14\":1,\"15\":1,\"23\":2}}],[\">\",{\"1\":{\"18\":1}}],[\">>>\",{\"1\":{\"14\":1}}],[\"><\",{\"1\":{\"3\":1}}],[\"urlremovedomain\",{\"1\":{\"22\":1,\"23\":2}}],[\"url去掉域名函数\",{\"0\":{\"21\":1}}],[\"url\",{\"0\":{\"14\":1,\"22\":1},\"1\":{\"22\":3}}],[\"使用正则\",{\"0\":{\"15\":1,\"23\":1}}],[\"使用\",{\"0\":{\"14\":1,\"22\":1}}],[\"使用指南\",{\"2\":{\"1\":1,\"10\":1,\"28\":1}}],[\"获取文件后缀名\",{\"0\":{\"13\":1}}],[\"key\",{\"1\":{\"11\":4}}],[\"keyframes\",{\"1\":{\"3\":1}}],[\"而原型上的\",{\"1\":{\"11\":1}}],[\"找到的是所属类原型上的constructor\",{\"1\":{\"11\":1}}],[\"getsuffix\",{\"1\":{\"14\":1,\"15\":1}}],[\"get\",{\"1\":{\"11\":2}}],[\"对象进行深拷贝\",{\"1\":{\"11\":1}}],[\"timer\",{\"1\":{\"19\":4}}],[\"this\",{\"1\":{\"18\":1,\"19\":1}}],[\"throttle\",{\"1\":{\"18\":1}}],[\"typeof\",{\"1\":{\"11\":1}}],[\"text\",{\"1\":{\"6\":2,\"7\":2}}],[\"普通值或函数不需要深拷贝\",{\"1\":{\"11\":1}}],[\"处理正则类型\",{\"1\":{\"11\":1}}],[\"处理日期类型\",{\"1\":{\"11\":1}}],[\"处理null或者undefined\",{\"1\":{\"11\":1}}],[\"replace\",{\"1\":{\"23\":1}}],[\"regex\",{\"1\":{\"15\":2,\"23\":2}}],[\"regexp\",{\"1\":{\"11\":2}}],[\"return\",{\"1\":{\"11\":6,\"14\":1,\"15\":1,\"18\":2,\"19\":2,\"22\":1,\"23\":2}}],[\"right\",{\"1\":{\"3\":1}}],[\"if\",{\"1\":{\"11\":6,\"18\":1,\"19\":1}}],[\"in\",{\"1\":{\"11\":1}}],[\"instanceof\",{\"1\":{\"11\":2}}],[\"infinite\",{\"1\":{\"3\":1}}],[\"inline\",{\"1\":{\"3\":1}}],[\"number\",{\"1\":{\"18\":1,\"19\":1}}],[\"null\",{\"1\":{\"11\":1,\"19\":1}}],[\"new\",{\"1\":{\"11\":4,\"22\":1}}],[\"nowrap\",{\"1\":{\"6\":1}}],[\"none\",{\"1\":{\"3\":1}}],[\"=>\",{\"1\":{\"19\":1}}],[\"==\",{\"1\":{\"11\":1}}],[\"===\",{\"1\":{\"11\":1}}],[\"=\",{\"1\":{\"11\":3,\"15\":1,\"18\":3,\"19\":2,\"22\":2,\"23\":4}}],[\"debounce\",{\"1\":{\"19\":1}}],[\"delay\",{\"1\":{\"18\":3,\"19\":3}}],[\"deepclone\",{\"1\":{\"11\":2}}],[\"date\",{\"1\":{\"11\":2,\"18\":1}}],[\"display\",{\"1\":{\"3\":1,\"7\":1}}],[\"fn\",{\"1\":{\"18\":3,\"19\":3}}],[\"fn执行周期控制为delay\",{\"1\":{\"18\":1}}],[\"filename\",{\"1\":{\"14\":2,\"15\":2}}],[\"fullurl\",{\"1\":{\"14\":1,\"22\":2,\"23\":5}}],[\"function\",{\"1\":{\"11\":1,\"14\":1,\"15\":1,\"18\":3,\"19\":3,\"22\":1,\"23\":2}}],[\"for\",{\"1\":{\"11\":1}}],[\"ffffff\",{\"1\":{\"3\":1}}],[\"exec\",{\"1\":{\"15\":1}}],[\"export\",{\"1\":{\"11\":1}}],[\"ellipsis\",{\"1\":{\"6\":1,\"7\":1}}],[\"深拷贝\",{\"0\":{\"11\":1}}],[\"javascript\",{\"0\":{\"9\":1},\"2\":{\"12\":1,\"16\":1,\"20\":1,\"24\":1}}],[\"多少行进行换行\",{\"1\":{\"7\":1}}],[\"多行文字超出\",{\"0\":{\"7\":1}}],[\"last\",{\"1\":{\"18\":3}}],[\"lastindexof\",{\"1\":{\"14\":1}}],[\"let\",{\"1\":{\"11\":2,\"18\":2,\"19\":1}}],[\"line\",{\"1\":{\"7\":1}}],[\"loading\",{\"1\":{\"3\":4}}],[\"object\",{\"1\":{\"11\":1}}],[\"obj\",{\"1\":{\"11\":16}}],[\"orient\",{\"1\":{\"7\":1}}],[\"overflow\",{\"1\":{\"6\":3,\"7\":3}}],[\"文字超出显示省略号\",{\"0\":{\"5\":1}}],[\"https\",{\"1\":{\"23\":1}}],[\"html>\",{\"1\":{\"3\":1}}],[\"hasownproperty\",{\"1\":{\"11\":1}}],[\"hash\",{\"1\":{\"11\":5}}],[\"hidden\",{\"1\":{\"6\":1,\"7\":1}}],[\"height\",{\"1\":{\"3\":1}}],[\"加载中\",{\"1\":{\"3\":1}}],[\"加载中小点点动画\",{\"0\":{\"2\":1,\"3\":1}}],[\"75\",{\"1\":{\"3\":1}}],[\"7px\",{\"1\":{\"3\":2}}],[\"50\",{\"1\":{\"3\":1}}],[\"weakmap\",{\"1\":{\"11\":1}}],[\"webkit\",{\"1\":{\"7\":3}}],[\"wrap\",{\"1\":{\"7\":1}}],[\"word\",{\"1\":{\"7\":2}}],[\"white\",{\"1\":{\"3\":6,\"6\":1}}],[\"width\",{\"1\":{\"3\":1}}],[\"0\",{\"1\":{\"3\":12,\"14\":1,\"18\":1}}],[\"slice\",{\"1\":{\"14\":1}}],[\"settimeout\",{\"1\":{\"19\":1}}],[\"set\",{\"1\":{\"11\":1}}],[\"space\",{\"1\":{\"6\":1}}],[\"span>\",{\"1\":{\"3\":1}}],[\"shadow\",{\"1\":{\"3\":3}}],[\"style>\",{\"1\":{\"3\":1}}],[\"start\",{\"1\":{\"3\":1}}],[\"steps\",{\"1\":{\"3\":1}}],[\"12px\",{\"1\":{\"3\":1}}],[\"1\",{\"1\":{\"3\":1,\"14\":1,\"15\":1}}],[\"4s\",{\"1\":{\"3\":1}}],[\"25\",{\"1\":{\"3\":1}}],[\"2\",{\"1\":{\"3\":1,\"7\":1,\"14\":1,\"23\":1}}],[\"2px\",{\"1\":{\"3\":5}}],[\"26px\",{\"1\":{\"3\":1}}],[\"20px\",{\"1\":{\"3\":1}}],[\"6px\",{\"1\":{\"3\":1}}],[\"cur\",{\"1\":{\"18\":3}}],[\"const\",{\"1\":{\"15\":1,\"22\":2,\"23\":4}}],[\"constructor指向的是当前类本身\",{\"1\":{\"11\":1}}],[\"constructor\",{\"1\":{\"11\":1}}],[\"color\",{\"1\":{\"3\":2}}],[\"cleartimeout\",{\"1\":{\"19\":1}}],[\"cloneobj\",{\"1\":{\"11\":4}}],[\"clamp\",{\"1\":{\"7\":1}}],[\"class=\",{\"1\":{\"3\":1}}],[\"css\",{\"0\":{\"0\":1},\"2\":{\"4\":1,\"8\":1}}],[\"break\",{\"1\":{\"7\":1}}],[\"box\",{\"1\":{\"3\":3,\"7\":2}}],[\"border\",{\"1\":{\"3\":1}}],[\"block\",{\"1\":{\"3\":1}}],[\"black\",{\"1\":{\"3\":1}}],[\"background\",{\"1\":{\"3\":1}}],[\"button>\",{\"1\":{\"3\":1}}],[\"button\",{\"1\":{\"3\":1}}],[\"<span\",{\"1\":{\"3\":1}}],[\"<style>\",{\"1\":{\"3\":1}}],[\"<button>\",{\"1\":{\"3\":1}}],[\"<\",{\"1\":{\"3\":3}}],[\"<html>\",{\"1\":{\"3\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
